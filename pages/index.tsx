import Head from 'next/head';
import { Flex, Text, useDisclosure } from '@chakra-ui/react';
import { HiMenuAlt2 } from 'react-icons/hi';
import { IoFilterSharp } from 'react-icons/io5';
import Sidebar from '@/components/sidebar';
import Card from '@/components/card';
import { useState, useEffect } from 'react';
import useSWR from 'swr';
import { useCurrentUser } from '@/hooks';
import axios from 'axios';
import AddButton from '@/components/addButton';

export const localUrl = 'http://localhost:3000/award';

const fetcher = (url: string, token: any) =>
  axios.get(url, {
    headers: {
      Authorization: `bearer ${token}`,
    },
  });

export default function Home() {
  const [statusButton, setStatusButton] = useState('');
  const [awardData, setAwardData] = useState([]);

  const { isOpen, onOpen, onClose } = useDisclosure();
  const user = useCurrentUser();

  const fetchData = async (token: string) => {
    try {
      const { data } = await axios.get(localUrl, {
        data: {
          name: 'amana',
        },
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      return data;
    } catch (error) {
      console.log(error);
    }
  };
  useEffect(() => {
    if (user?.accessToken) {
      fetchData(user?.accessToken)
        .then((res) => setAwardData(res))
        .catch((err) => console.log(err));
    }
  }, [user]);

  // console.log(awardData);

  // const { data, error } = useSWR(localUrl, (url) =>
  //   fetcher(url, user?.accessToken)
  // );

  async function sidebarHandler(status: string): Promise<void> {
    await setStatusButton(status);
    onOpen();
  }
  return (
    <>
      <Head>
        <title>Award App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex justifyContent="space-between" alignItems="center" p={5}>
        <HiMenuAlt2
          size="20px"
          onClick={() => sidebarHandler('menu')}
          cursor="pointer"
        />
        <Text fontSize="lg" fontWeight="bold">
          Awards
        </Text>
        <IoFilterSharp size="20px" onClick={() => sidebarHandler('filter')} />
      </Flex>
      {awardData?.length == 0 ? (
        <Flex justifyContent="center" alignItems="center">
          <Text>Opps, No Data Dound!</Text>
        </Flex>
      ) : (
        <Flex flexDir="column" mt={5} gap={4}>
          {awardData?.map((el: any) => {
            return <Card key={el.id} data={el} />;
          })}
        </Flex>
      )}
      <Sidebar
        isOpen={isOpen}
        onClose={onClose}
        statusButton={statusButton}
        setAwardData={setAwardData}
      />
      <Flex justifyContent="flex-end" m={5}>
        <AddButton />
      </Flex>
    </>
  );
}
